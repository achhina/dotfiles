#!/bin/env bash
if [[ "${BASH_SOURCE[0]}" -ef "$0" ]] || [[ $ZSH_EVAL_CONTEXT == toplevel ]];
then
    echo "This file is meant to be sourced."
    exit 1
fi

if [[ -n "$DEBUG_DOTFILES" ]]; then
    set -xv
    PS4='${0}:${LINENO}: '
fi

function source_dotfile {
    DOTFILE="$1"
    if [ -f "$DOTFILE" ]; then
        . "$DOTFILE"
    fi
}

function prepend_to_path {
    PATH_ENTRY="$1"
    PATH="${PATH_ENTRY:+$PATH_ENTRY:}$PATH"
}

function append_to_path {
    PATH_ENTRY="$1"
    PATH="$PATH${PATH_ENTRY:+:$PATH_ENTRY}"
}

source_dotfile "${XDG_CONFIG_HOME:-$HOME/.config}/bash/defaults"

HOME_DIR="${XDG_HOME:-$HOME}"
CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}"

source_dotfile "${CONFIG_DIR}/zsh/oh-my-zsh"

source_dotfile "${CONFIG_DIR}/bash/secrets"

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# Set aliases last to override oh-my-zsh defaults
source_dotfile "${CONFIG_DIR}/bash/aliases"

prepend_to_path "${HOME_DIR}/bin"

# Function to map `$ <command>` to just `command`. Useful for copying single
# line commands prefixed with '$'.
# https://github.com/orgs/community/discussions/35615#discussioncomment-10491333
function \$ { "$@"; }

export PATH

if [[ -n "$DEBUG_DOTFILES" ]]; then
    set +xv
fi
